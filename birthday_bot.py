from settings_bot import TOKEN
import telebot
import keyboards

# import time

bot = telebot.TeleBot(TOKEN)
new_user = False
last_update = ''
add_user_information = {}


@bot.message_handler(commands=['start'])
def start(message):
    keyboards.keyboard_command(message, bot)


@bot.message_handler(commands=['all'])
def all_birthdays(message):
    bot.send_message(message.chat.id, '–í—Å–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è:')
    bot.send_message(message.chat.id, '–Ø –ø–æ–∫–∞ —ç—Ç–æ –Ω–µ —É–º–µ—é, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—åüòã')


@bot.message_handler(commands=['week'])
def week_birthdays(message):
    bot.send_message(message.chat.id, '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ:')
    bot.send_message(message.chat.id, '–Ø –ø–æ–∫–∞ —ç—Ç–æ –Ω–µ —É–º–µ—é, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—åüòã')


@bot.message_handler(commands=['month'])
def month_birthdays(message):
    bot.send_message(message.chat.id, '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ:')
    bot.send_message(message.chat.id, '–Ø –ø–æ–∫–∞ —ç—Ç–æ –Ω–µ —É–º–µ—é, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—åüòã')


@bot.message_handler(commands=['add'])
def add_user(message):
    bot.send_message(message.chat.id, '–î–æ–±–∞–≤–∏–º –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞: \n–ù–∞–ø–∏—à–∏ –∫—Ç–æ –∏–º–µ–Ω–∏–Ω–Ω–∏–∫?')
    global new_user
    new_user = True


@bot.message_handler(commands=['delete'])
def delete_user(message):
    bot.send_message(message.chat.id, '–£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–µ–µ:')
    bot.send_message(message.chat.id, '–Ø –ø–æ–∫–∞ —ç—Ç–æ –Ω–µ —É–º–µ—é, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—åüòã')


@bot.message_handler(content_types=['text'])
def last_updates(message):
    global last_update, add_user_information, new_user
    last_update = message.text
    if new_user:
        new_user = False
        add_user_information['name'] = last_update
        bot.send_message(message.chat.id, '–ò–º–µ–Ω–∏–Ω–Ω–∏–∫: {}'.format(add_user_information['name']))
        keyboards.keyboard_month(message, '–í –∫–∞–∫–æ–º –º–µ—Å—è—Ü–µ —Ä–æ–¥–∏–ª—Å—è?', bot)
    else:
        bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ —Ç—ã –æ—Ç –º–µ–Ω—è —Ö–æ—á–µ—à—å üòì\n–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:' )
        start(message)



@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    command = call.data.split('_')[0]
    value = call.data.split('_')[1]
    if command == 'answer':
        if value == 'yes':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–î–æ–±–∞–≤–∏–ª üòå')


        elif value == 'no':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π \n–¢–∞–∫ –∫—Ç–æ –∏–º–µ–Ω–∏–Ω–Ω–∏–∫?')
            global new_user
            new_user = True

    elif command == 'month':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–ú–µ—Å—è—Ü: {}'.format(call.data.split('_')[-1]))
        add_user_information['month'] = [call.data.split('_')[1], call.data.split('_')[-1]]

        keyboards.keyboard_day(call.message, '–í –∫–∞–∫–æ–π –¥–µ–Ω—å?', add_user_information['month'][0], bot)

    elif command == 'day':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–î–µ–Ω—å: {}'.format(value))
        add_user_information['date'] = value
        user = '–ò–º–µ–Ω–∏–Ω–Ω–∏–∫: {}, –º–µ—Å—è—Ü: {}, –¥–µ–Ω—å: {}\n'.format(add_user_information['name'],
                                                             add_user_information['month'][1],
                                                             add_user_information['date'])
        keyboards.keyboard_y_or_n(call.message, (user, '–í—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ? –î–æ–±–∞–≤–ª—è–µ–º?'), bot)


bot.polling()
